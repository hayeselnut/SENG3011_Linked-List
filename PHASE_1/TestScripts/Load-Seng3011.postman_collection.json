{
	"info": {
		"_postman_id": "3c272922-88a1-47e4-8590-cc5f4adfa981",
		"name": "Load-Seng3011",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Load test with key",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const moment = require('moment');\r",
							"\r",
							"const randomDate = (startDate, endDate) => {\r",
							"  let date = new Date(+startDate + Math.random() * (endDate - startDate));\r",
							"  let hour = 0 + Math.random() * (23 - 0) | 0;\r",
							"  let minute = 0 + Math.random() * (59 - 0) | 0;\r",
							"  let second = 0 + Math.random() * (59 - 0) | 0;\r",
							"  date.setHours(hour);\r",
							"  date.setMinutes(minute);\r",
							"  date.setSeconds(second);\r",
							"  return date;\r",
							"};\r",
							"\r",
							"const startDate = moment()\r",
							"      .startOf('year')\r",
							"      .toDate();\r",
							"\r",
							"const startDate2 = moment()\r",
							"      .startOf('month')\r",
							"      .toDate();\r",
							"\r",
							"const endDate = new Date();\r",
							"\r",
							"const firstTime = moment(randomDate(startDate, startDate2)).format('YYYY-MM-DD HH:mm:ss'); \r",
							"const SencondTime = moment(randomDate(startDate2, endDate)).format('YYYY-MM-DD HH:mm:ss'); \r",
							"\r",
							"var period_of_interest = firstTime + \" to \"+ SencondTime\r",
							"\r",
							"pm.environment.set('period_of_interest',period_of_interest)\r",
							"\r",
							"function GetRandomNum(Min, Max) {\r",
							"    var Range = Max - Min;\r",
							"    var Rand = Math.random();\r",
							"    return(Min + Math.round(Rand * Range));\r",
							"}\r",
							"\r",
							"var locationwords = [\"China\",\"Japan\",\"Us\",\"UK\",\"Asia\",\"Australia\",\"German\",\"India\",\"Haemorrhagic Fever\" ,\r",
							"\"Acute Flacid Paralysis\" ,\r",
							"\"Acute gastroenteritis\" ,\r",
							"\"Acute respiratory syndrome\" ,\r",
							"\"Influenza-like illness\" ,\r",
							"\"Acute fever and rash\" ,\r",
							"\"Fever of unknown Origin\" ,\r",
							"\"Encephalitis\" ,\r",
							"\"Meningitis\",\r",
							" \"unknown\" ,\r",
							" \"other\" ,\r",
							" \"anthrax cutaneous\" ,\r",
							" \"anthrax gastrointestinous\" ,\r",
							" \"anthrax inhalation\" ,\r",
							" \"botulism\" ,\r",
							" \"brucellosis\" ,\r",
							" \"chikungunya\" ,\r",
							" \"cholera\" ,\r",
							" \"cryptococcosis\" ,\r",
							" \"cryptosporidiosis\" ,\r",
							" \"crimean-congo haemorrhagic fever\" ,\r",
							" \"dengue\" ,\r",
							" \"diphteria\" ,\r",
							" \"ebola haemorrhagic fever\" ,\r",
							" \"ehec (e.coli)\" ,\r",
							" \"enterovirus 71 infection\" ,\r",
							" \"influenza a/h5n1\" ,\r",
							" \"influenza a/h7n9\" ,\r",
							" \"influenza a/h9n2\" ,\r",
							" \"influenza a/h1n1\" ,\r",
							" \"influenza a/h1n2\" ,\r",
							" \"influenza a/h3n5\" ,\r",
							" \"influenza a/h3n2\" ,\r",
							" \"influenza a/h2n2\" ,\r",
							" \"hand, foot and mouth disease\" ,\r",
							" \"hantavirus\" ,\r",
							" \"hepatitis a\" ,\r",
							" \"hepatitis b\" ,\r",
							" \"hepatitis c\" ,\r",
							" \"hepatitis d\" ,\r",
							" \"hepatitis e\" ,\r",
							" \"histoplasmosis\" ,\r",
							" \"hiv/aids\" ,\r",
							" \"lassa fever\" ,\r",
							" \"malaria\" ,\r",
							" \"marburg virus disease\" ,\r",
							" \"measles\" ,\r",
							" \"mers-cov\" ,\r",
							" \"mumps\" ,\r",
							" \"nipah virus\" ,\r",
							" \"norovirus infection\" ,\r",
							" \"pertussis\" ,\r",
							" \"plague\" ,\r",
							" \"pneumococcus pneumonia\" ,\r",
							" \"poliomyelitis\" ,\r",
							" \"q fever\" ,\r",
							" \"rabies\" ,\r",
							" \"rift valley fever\" ,\r",
							" \"rotavirus infection\" ,\r",
							" \"rubella\" ,\r",
							" \"salmonellosis\" ,\r",
							" \"sars\" ,\r",
							" \"shigellosis\" ,\r",
							" \"smallpox\" ,\r",
							" \"staphylococcal enterotoxin b\" ,\r",
							" \"thypoid fever\" ,\r",
							" \"tuberculosis\" ,\r",
							" \"tularemia\" ,\r",
							" \"vaccinia and cowpox\" ,\r",
							" \"varicella\" ,\r",
							" \"west nile virus\" ,\r",
							" \"yellow fever\" ,\r",
							" \"yersiniosis\" ,\r",
							" \"zika\" ,\r",
							" \"legionares\" ,\r",
							" \"listeriosis\" ,\r",
							" \"monkeypox\" ,\r",
							" \"COVID-19\" ] \r",
							"var random = GetRandomNum(0, 85);\r",
							"var query = locationwords[random];\r",
							"pm.environment.set('key_terms',query)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://us-central1-still-resource-306306.cloudfunctions.net/api/articles?period_of_interest={{period_of_interest}}&key_terms={{key_terms}}",
					"protocol": "https",
					"host": [
						"us-central1-still-resource-306306",
						"cloudfunctions",
						"net"
					],
					"path": [
						"api",
						"articles"
					],
					"query": [
						{
							"key": "period_of_interest",
							"value": "{{period_of_interest}}"
						},
						{
							"key": "key_terms",
							"value": "{{key_terms}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Load test only time",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const moment = require('moment');\r",
							"\r",
							"const randomDate = (startDate, endDate) => {\r",
							"  let date = new Date(+startDate + Math.random() * (endDate - startDate));\r",
							"  let hour = 0 + Math.random() * (23 - 0) | 0;\r",
							"  let minute = 0 + Math.random() * (59 - 0) | 0;\r",
							"  let second = 0 + Math.random() * (59 - 0) | 0;\r",
							"  date.setHours(hour);\r",
							"  date.setMinutes(minute);\r",
							"  date.setSeconds(second);\r",
							"  return date;\r",
							"};\r",
							"\r",
							"const startDate = moment()\r",
							"      .startOf('year')\r",
							"      .toDate();\r",
							"\r",
							"const startDate2 = moment()\r",
							"      .startOf('month')\r",
							"      .toDate();\r",
							"\r",
							"const endDate = new Date();\r",
							"\r",
							"const firstTime = moment(randomDate(startDate, startDate2)).format('YYYY-MM-DD HH:mm:ss'); \r",
							"const SencondTime = moment(randomDate(startDate2, endDate)).format('YYYY-MM-DD HH:mm:ss'); \r",
							"\r",
							"var period_of_interest = firstTime + \" to \"+ SencondTime\r",
							"\r",
							"pm.environment.set('period_of_interest',period_of_interest)\r",
							"\r",
							"function GetRandomNum(Min, Max) {\r",
							"    var Range = Max - Min;\r",
							"    var Rand = Math.random();\r",
							"    return(Min + Math.round(Rand * Range));\r",
							"}\r",
							"\r",
							"var locationwords = [\"China\",\"Japan\",\"Us\",\"UK\",\"Asia\",\"Australia\",\"German\",\"India\",\"Haemorrhagic Fever\" ,\r",
							"\"Acute Flacid Paralysis\" ,\r",
							"\"Acute gastroenteritis\" ,\r",
							"\"Acute respiratory syndrome\" ,\r",
							"\"Influenza-like illness\" ,\r",
							"\"Acute fever and rash\" ,\r",
							"\"Fever of unknown Origin\" ,\r",
							"\"Encephalitis\" ,\r",
							"\"Meningitis\",\r",
							" \"unknown\" ,\r",
							" \"other\" ,\r",
							" \"anthrax cutaneous\" ,\r",
							" \"anthrax gastrointestinous\" ,\r",
							" \"anthrax inhalation\" ,\r",
							" \"botulism\" ,\r",
							" \"brucellosis\" ,\r",
							" \"chikungunya\" ,\r",
							" \"cholera\" ,\r",
							" \"cryptococcosis\" ,\r",
							" \"cryptosporidiosis\" ,\r",
							" \"crimean-congo haemorrhagic fever\" ,\r",
							" \"dengue\" ,\r",
							" \"diphteria\" ,\r",
							" \"ebola haemorrhagic fever\" ,\r",
							" \"ehec (e.coli)\" ,\r",
							" \"enterovirus 71 infection\" ,\r",
							" \"influenza a/h5n1\" ,\r",
							" \"influenza a/h7n9\" ,\r",
							" \"influenza a/h9n2\" ,\r",
							" \"influenza a/h1n1\" ,\r",
							" \"influenza a/h1n2\" ,\r",
							" \"influenza a/h3n5\" ,\r",
							" \"influenza a/h3n2\" ,\r",
							" \"influenza a/h2n2\" ,\r",
							" \"hand, foot and mouth disease\" ,\r",
							" \"hantavirus\" ,\r",
							" \"hepatitis a\" ,\r",
							" \"hepatitis b\" ,\r",
							" \"hepatitis c\" ,\r",
							" \"hepatitis d\" ,\r",
							" \"hepatitis e\" ,\r",
							" \"histoplasmosis\" ,\r",
							" \"hiv/aids\" ,\r",
							" \"lassa fever\" ,\r",
							" \"malaria\" ,\r",
							" \"marburg virus disease\" ,\r",
							" \"measles\" ,\r",
							" \"mers-cov\" ,\r",
							" \"mumps\" ,\r",
							" \"nipah virus\" ,\r",
							" \"norovirus infection\" ,\r",
							" \"pertussis\" ,\r",
							" \"plague\" ,\r",
							" \"pneumococcus pneumonia\" ,\r",
							" \"poliomyelitis\" ,\r",
							" \"q fever\" ,\r",
							" \"rabies\" ,\r",
							" \"rift valley fever\" ,\r",
							" \"rotavirus infection\" ,\r",
							" \"rubella\" ,\r",
							" \"salmonellosis\" ,\r",
							" \"sars\" ,\r",
							" \"shigellosis\" ,\r",
							" \"smallpox\" ,\r",
							" \"staphylococcal enterotoxin b\" ,\r",
							" \"thypoid fever\" ,\r",
							" \"tuberculosis\" ,\r",
							" \"tularemia\" ,\r",
							" \"vaccinia and cowpox\" ,\r",
							" \"varicella\" ,\r",
							" \"west nile virus\" ,\r",
							" \"yellow fever\" ,\r",
							" \"yersiniosis\" ,\r",
							" \"zika\" ,\r",
							" \"legionares\" ,\r",
							" \"listeriosis\" ,\r",
							" \"monkeypox\" ,\r",
							" \"COVID-19\" ] \r",
							"//var random = GetRandomNum(0, 85);\r",
							"//var query = locationwords[random];\r",
							"//pm.environment.set('key_terms',query)\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://us-central1-still-resource-306306.cloudfunctions.net/api/articles?period_of_interest={{period_of_interest}}",
					"protocol": "https",
					"host": [
						"us-central1-still-resource-306306",
						"cloudfunctions",
						"net"
					],
					"path": [
						"api",
						"articles"
					],
					"query": [
						{
							"key": "period_of_interest",
							"value": "{{period_of_interest}}"
						}
					]
				}
			},
			"response": []
		}
	]
}