openapi: 3.0.0
info:
  title: Get Reports
  version: '1.0'
  contact:
    name: Hayes Choy
    email: hayeselnut2127@gmail.com
  description: 'This is the documentation that describes our API endpoints to access our teams disease and syndrome data form the CDC '
servers:
  - url: 'https://us-central1-still-resource-306306.cloudfunctions.net'
paths:
  /api/articles:
    parameters: []
    get:
      summary: GET all of the articles
      operationId: get-articles-poi-key_terms-location
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  log:
                    type: object
                    properties:
                      team:
                        type: string
                        minLength: 1
                      time_accessed:
                        type: string
                        minLength: 1
                    required:
                      - team
                      - time_accessed
                  articles:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      required:
                        - id
                        - main_text
                        - url
                        - date_of_publication
                        - headline
                      properties:
                        id:
                          type: string
                          minLength: 1
                        main_text:
                          type: string
                          minLength: 1
                        url:
                          type: string
                          minLength: 1
                        date_of_publication:
                          type: string
                          minLength: 1
                        reports:
                          type: array
                          uniqueItems: true
                          minItems: 1
                          items:
                            required:
                              - id
                              - event_date
                            properties:
                              id:
                                type: string
                                minLength: 1
                              syndromes:
                                type: array
                                items:
                                  type: string
                              diseases:
                                type: array
                                items:
                                  type: string
                              locations:
                                type: array
                                uniqueItems: true
                                minItems: 1
                                items:
                                  required:
                                    - country
                                    - location
                                  properties:
                                    country:
                                      type: string
                                      minLength: 1
                                    location:
                                      type: string
                                      minLength: 1
                              event_date:
                                type: string
                                minLength: 1
                        headline:
                          type: string
                          minLength: 1
                required:
                  - log
                  - articles
              examples:
                example1:
                  value:
                    log:
                      team: SENG3011_LINKED_LIST
                      time_accessed: '2021-03-19T02:24:15.080Z'
                    articles:
                      - id: g67edVI2X90bWQ4yUSJ7
                        main_text: 'On 15 January 2020, the Ministry of Health, Labour and Welfare, Japan (MHLW) reported an imported case of laboratory-confirmed 2019-novel coronavirus (2019-nCoV) from Wuhan, Hubei Province, China. The case-patient is male, between the age of 30-39 years, living in Japan. The case-patient travelled to Wuhan, China in late December and developed fever on 3 January 2020 while staying in Wuhan. He did not visit the Huanan Seafood Wholesale Market or any other live animal markets in Wuhan. He has indicated that he was in close contact with a person with pneumonia. On 6 January, he traveled back to Japan and tested negative for influenza when he visited a local clinic on the same day.'
                        url: 'https://www.who.int/csr/don/17-january-2020-novel-coronavirus-japan-ex-chila/en/'
                        date_of_publication: '2021-01-16T13:00:00.000Z'
                        reports:
                          - id: eWNmTwDbDmE396xk7sV6
                            syndromes:
                              - Haemorrhagic Fever
                              - Acute Flacid Paralysis
                            diseases:
                              - anthrax cutaneous
                              - anthrax gastrointestinous
                            locations:
                              - country: Australia
                                location: Sydney
                            event_date: '2020-01-02T13:00:00.000Z'
                        headline: Novel Coronavirus - Japan (ex-China)
                      - id: g67edVI2X90bWQ4yUSJ8
                        main_text: 'On 15 January 2021, the Ministry of Health, Labour and Welfare, Japan (MHLW) reported an imported case of laboratory-confirmed 2019-novel coronavirus (2019-nCoV) from Wuhan, Hubei Province, China. The case-patient is male, between the age of 30-39 years, living in Japan. The case-patient travelled to Wuhan, China in late December and developed fever on 3 January 2020 while staying in Wuhan. He did not visit the Huanan Seafood Wholesale Market or any other live animal markets in Wuhan. He has indicated that he was in close contact with a person with pneumonia. On 6 January, he traveled back to Japan and tested negative for influenza when he visited a local clinic on the same day.'
                        url: 'https://www.who.int/csr/don/17-january-2020-novel-coronavirus-japan-ex-chila/en/'
                        date_of_publication: '2021-01-16T13:00:00.000Z'
                        reports:
                          - id: eWNmTwDbDmE396xk7sV6
                            syndromes:
                              - Haemorrhagic Fever
                              - Acute Flacid Paralysis
                            diseases:
                              - anthrax cutaneous
                              - anthrax gastrointestinous
                            locations:
                              - country: Australia
                                location: Sydney
                            event_date: '2020-01-02T13:00:00.000Z'
                        headline: Novel Coronavirus - Japan (ex-China)
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
              examples:
                example-1:
                  value:
                    errorMessage: 400 'key terms' are required
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
              examples:
                example-1:
                  value:
                    errorMessage: 401 Please provide a valid api key
        '404':
          description: Not Found
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
              examples:
                example-1:
                  value:
                    errorMessage: 404 ‘/foo/bar’ does not exist
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
              examples:
                example-1:
                  value:
                    errorMessage: Internal server error
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
              examples:
                example-1:
                  value:
                    errorMessage: 501 ‘/foo/bar’ is still in development
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
              examples:
                example-1:
                  value:
                    errorMessage: 502 Server returned invalid response
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
              examples:
                example-1:
                  value:
                    errorMessage: Server returned invalid response
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorMessage:
                    type: string
              examples:
                example-1:
                  value:
                    errorMessage: Server did not respond in time
      description: 'Endpoint for getting reports from, period of interest, key disease terms and location.'
      parameters:
        - schema:
            type: string
            pattern: '^(\d{4})-(\d\d|xx)-(\d\d|xx) (\d\d|xx):(\d\d|xx):(\d\d|xx) (to)? (\d{4}-\d\d-\d\d \d\d:\d\d:\d\d)$'
            example: '2019-01-02 13:00:00 to 2020-01-03 13:00:00'
          in: query
          description: Period of interest
          name: period_of_interest
          required: true
        - schema:
            type: string
            pattern: '^[\!]?[a-zA-Z\-\ \'']*[,(\!)?[a-zA-Z\-\ \'']*]*$'
            example: 'Corona,Ebola,!Influenza'
          in: query
          name: key_terms
          description: Diseases comma separated
          allowEmptyValue: true
        - schema:
            type: string
            pattern: '^[a-zA-Z\-\ \'']*$'
            example: China
          in: query
          description: Location of interest
          name: location
          allowEmptyValue: true
  /api/article:
    get:
      summary: GET Articles by ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  log:
                    type: object
                    properties:
                      team:
                        type: string
                        minLength: 1
                      time_accessed:
                        type: string
                        minLength: 1
                    required:
                      - team
                      - time_accessed
                  article:
                    type: object
                    properties:
                      id:
                        type: string
                        minLength: 1
                      main_text:
                        type: string
                        minLength: 1
                      url:
                        type: string
                        minLength: 1
                      date_of_publication:
                        type: string
                        minLength: 1
                      reports:
                        type: array
                        uniqueItems: true
                        minItems: 1
                        items:
                          required:
                            - id
                            - event_date
                          properties:
                            id:
                              type: string
                              minLength: 1
                            syndromes:
                              type: array
                              items:
                                type: string
                            diseases:
                              type: array
                              items:
                                type: string
                            locations:
                              type: array
                              uniqueItems: true
                              minItems: 1
                              items:
                                required:
                                  - country
                                  - location
                                properties:
                                  country:
                                    type: string
                                    minLength: 1
                                  location:
                                    type: string
                                    minLength: 1
                            event_date:
                              type: string
                              minLength: 1
                      headline:
                        type: string
                        minLength: 1
                    required:
                      - id
                      - main_text
                      - url
                      - date_of_publication
                      - reports
                      - headline
                required:
                  - log
                  - article
              examples:
                example-1:
                  value:
                    log:
                      team: SENG3011_LINKED_LIST
                      time_accessed: '2021-03-19T02:24:15.080Z'
                    article:
                      id: g67edVI2X90bWQ4yUSJ7
                      main_text: 'On 15 January 2020, the Ministry of Health, Labour and Welfare, Japan (MHLW) reported an imported case of laboratory-confirmed 2019-novel coronavirus (2019-nCoV) from Wuhan, Hubei Province, China. The case-patient is male, between the age of 30-39 years, living in Japan. The case-patient travelled to Wuhan, China in late December and developed fever on 3 January 2020 while staying in Wuhan. He did not visit the Huanan Seafood Wholesale Market or any other live animal markets in Wuhan. He has indicated that he was in close contact with a person with pneumonia. On 6 January, he traveled back to Japan and tested negative for influenza when he visited a local clinic on the same day.'
                      url: 'https://www.who.int/csr/don/17-january-2020-novel-coronavirus-japan-ex-chila/en/'
                      date_of_publication: '2021-01-16T13:00:00.000Z'
                      reports:
                        - id: eWNmTwDbDmE396xk7sV6
                          syndromes:
                            - Haemorrhagic Fever
                            - Acute Flacid Paralysis
                          diseases:
                            - anthrax cutaneous
                            - anthrax gastrointestinous
                          locations:
                            - country: Australia
                              location: Sydney
                          event_date: '2020-01-02T13:00:00.000Z'
                      headline: Novel Coronavirus - Japan (ex-China)
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: 400 'key terms' are required
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: 401 Please provide a valid api key
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: 404 ‘/foo/bar’ does not exist
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    errorMessage: Internal server error
        '501':
          description: Not Implemented
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: 502 Server returned invalid response
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: Server returned invalid response
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: Server did not respond in time
      operationId: get-article-by-id
      description: Gets the article that corresponds to the input id
      parameters: []
    parameters: []
  /api/logs:
    get:
      summary: GET the past logs
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  logs:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          minLength: 1
                        endpoint:
                          type: string
                          minLength: 1
                        queryParams:
                          type: object
                        pathParams:
                          type: object
                          properties:
                            id:
                              type: string
                              minLength: 1
                      required:
                        - timestamp
                        - endpoint
                required:
                  - logs
              examples:
                example-1:
                  value:
                    logs:
                      - timestamp: '2021-03-19T02:24:15.080Z'
                        endpoint: /api/articles/1
                        queryParams: {}
                        pathParams:
                          id: '1'
                      - timestamp: '2021-03-19T02:24:15.080Z'
                        endpoint: '/api/articles?period_of_interest=2021-03-19T02:24:15.080Z&key_terms=corona&location=Sydney'
                        queryParams:
                          period_of_interest: '2021-03-19T02:24:15.080Z'
                          key_terms: corona
                          location: Sydney
                        pathParams:
                          id: '1'
                      - timestamp: '2021-03-19T02:24:15.089Z'
                        endpoint: /api/logs
                        queryParams: {}
                        pathParams: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: 400 'key terms' are required
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: 401 Please provide a valid api key
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: 404 ‘/foo/bar’ does not exist
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    errorMessage: Internal server error
        '501':
          description: Not Implemented
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    errorMessage: 501 ‘/foo/bar’ is still in development
        '502':
          description: Bad Gateway
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    errorMessage: 502 Server returned invalid response
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: Server returned invalid response
        '504':
          description: Gateway Timeout
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  errorMessage:
                    type: string
                    minLength: 1
                required:
                  - errorMessage
              examples:
                example-1:
                  value:
                    errorMessage: Server did not respond in time
      operationId: get-api-logs
      description: 'Gets the last 10 20 API calls '
components:
  schemas: {}
  securitySchemes: {}
